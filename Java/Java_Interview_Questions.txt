-----------------------------------------------------------------
Java Basics
-----------------------------------------------------------------
1. Java String pool & Integer cache
5. Difference b/w equals, == and ===
7. Heap vs Stack memory
9. RMI
10. Serial & Throughput garbage collector
11. Compare volatile vs static variables in Java.
14. Singleton pattern and efficient way to implement it
15. SoftReference and WeakReference in Java
18. Object cloning advantages and disadvantages
19. Singleton class
20. Marker Interface
	--> Empty interface (no fields or methods). Ex: Serializable, Cloneable and Remote interfaces
21. String, StringBuffer and StringBuilder
6.	Explain functional interface in java8 ?
7.	Used of lambda expression?
8.	What is Optional? Why it is used?



-----------------------------------------------------------------
OOPS
-----------------------------------------------------------------
8. Coupling in OOP




-----------------------------------------------------------------
Collections	
-----------------------------------------------------------------
1. ArrayList vs Vector.
2. Internal working of ArrayList
3. LinkedList, Queue, Stack, Priority Queue
4. Set, HashSet, LinkedHashSet and its internal working
5. Map, TreeMap, HashMap, LinkedHashMap and its internal working
6. Difference b/w Fail Fast and Fail Safe iterators




-----------------------------------------------------------------
Exception Handling
-----------------------------------------------------------------




-----------------------------------------------------------------
Multithreading
-----------------------------------------------------------------
13. Synchronization and synchronized keyword
34.	Explain Thread Life Cyle?




-----------------------------------------------------------------
Java IO
-----------------------------------------------------------------




-----------------------------------------------------------------
Miscellaneous
-----------------------------------------------------------------
2. Is it possible to make a class "Static"
4. Continuous Integration, Continuous Delivery, Continuous Deployment
12. Examples where finally block will not executed in Java
16. Double brace initialization in Java
17. Different ways of creating object in Java
	--> Using new keyword
	--> Using new instance
	--> Using clone() method
	--> Using deserialization
	--> Using the newInstance() method of the Constructor class
22. Can we change the scope of the overridden method in the subclass
23. Can we modify the throws clause of the superclass method while overriding it in the subclass?
24. Virtual Function
25. Serialization in Java and Serializable interface. How can you avoid serialization in the child class if the base class is implementing the Serializable interface?
5.	Scenario: Suppose there are 4 beans and you want to execute beans based on some order like 1,2,3,4 how you do ?
9.	When to used of() and ofNullable()
10.	What are the solid principles?  Explain in detail.
15.	What is event -driven design pattern?




-----------------------------------------------------------------
Programs
-----------------------------------------------------------------
2.	Program: Find out the list of employees whose salary greater than 5K using  java8 streams.
11.	Program: write a Junit test case to accept 200 ok scenario.
23.	Program: we have a String like “I am a programmer” find out the second non repetitive character from string.
39.	How you will make sure that threads t1 , t2 and t3 will execute in sequential order?



